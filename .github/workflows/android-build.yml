name: Android CI Build

permissions: 
  contents: write

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
          
      - name: Decode and setup keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          mkdir -p "$HOME/.android"
          if [ -n "$KEYSTORE_BASE64" ]; then
            # Use custom keystore from secrets if available
            echo "$KEYSTORE_BASE64" | base64 -d > "$HOME/.android/release.keystore"
            echo "KEYSTORE_FILE=$HOME/.android/release.keystore" >> $GITHUB_ENV
            echo "KEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
            echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> $GITHUB_ENV
            echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> $GITHUB_ENV
            echo "Using custom release keystore"
          else
            # Fall back to debug keystore if no custom keystore is configured
            if [ ! -f "$HOME/.android/debug.keystore" ]; then
              keytool -genkeypair -v \
                -keystore "$HOME/.android/debug.keystore" \
                -alias androiddebugkey \
                -keyalg RSA -keysize 2048 \
                -validity 10000 \
                -storepass android \
                -keypass android \
                -dname "CN=Android Debug,O=Android,C=US"
            fi
            echo "Using debug keystore (no release keystore configured)"
          fi
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build debug APK (includes all ABIs)
        run: ./gradlew assembleDebug --no-daemon --stacktrace

      - name: Build release APK (includes all ABIs)
        run: ./gradlew assembleRelease --no-daemon --stacktrace

      - name: List built APKs
        run: |
          echo "Debug APKs (32-bit ARM, 64-bit ARM, and Universal):"
          find app/build/outputs/apk/debug -name "*.apk" -exec ls -lh {} \;
          echo ""
          echo "Release APKs (32-bit ARM, 64-bit ARM, and Universal):"
          find app/build/outputs/apk/release -name "*.apk" -exec ls -lh {} \;

      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/*.apk

      - name: Upload release APK
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: app/build/outputs/apk/release/*.apk

      - name: Upload APKs to GitHub Releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
          bash upload.sh app/build/outputs/apk/*/*.apk
